grade <- function(grade){
if (grade < 0 | grade > 100) {
stop("score must be a number between 0 and 100")
} else if (grade > 90) {
grade = "A"
} else if (grade > 80) {
grade = "B"
} else if (grade > 70) {
grade = "C""
} else if (grade > 60) {
grade = "D"
} else {
grade = "F"
}
return(grade)
}
grade(75)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
grade <- function(grade){
if (grade < 0 | grade > 100) {
stop("score must be a number between 0 and 100")
} else if (grade > 90) {
grade = "A"
} else if (grade > 80) {
grade = "B"
} else if (grade > 70) {
grade = "C"
} else if (grade > 60) {
grade = "D"
} else {
grade = "F"
}
return(grade)
}
grade(75)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
grade <- function(grade){
if (grade < 0 | grade > 100) {
stop("score must be a number between 0 and 100")
} else if (grade > 90) {
grade = "A"
} else if (grade > 80) {
grade = "B"
} else if (grade > 70) {
grade = "C"
} else if (grade > 60) {
grade = "D"
} else {
grade = "F"
}
return(grade)
}
grade(65)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
grade <- function(grade){
if (grade < 0 | grade > 100) {
stop("score must be a number between 0 and 100")
} else if (grade > 90) {
grade = "A"
} else if (grade > 80) {
grade = "B"
} else if (grade > 70) {
grade = "C"
} else if (grade > 60) {
grade = "D"
} else {
grade = "F"
}
return(grade)
}
grade(55)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
grade <- function(grade){
if (grade < 0 | grade > 100) {
stop("score must be a number between 0 and 100")
} else if (grade > 90) {
grade = "A"
} else if (grade > 80) {
grade = "B"
} else if (grade > 70) {
grade = "C"
} else if (grade > 60) {
grade = "D"
} else {
grade = "F"
}
return(grade)
}
grade(105)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
grade <- function(grade){
if (grade < 0 | grade > 100) {
stop("score must be a number between 0 and 100")
} else if (grade > 90) {
grade = "A"
} else if (grade > 80) {
grade = "B"
} else if (grade > 70) {
grade = "C"
} else if (grade > 60) {
grade = "D"
} else {
grade = "F"
}
return(grade)
}
grade(1)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
miles2inches <- function(x = 1) {
inches = x * 63360
return(inches)
}
miles2feet <- function(x = 1) {
feet = x * 5280
return(feet)
}
miles2yards <- function(x = 1) {
yards = x * 1760
return(yards)
}
miles2meters <- function(x = 1) {
meters = x / .00062137
return(meters)
}
miles2kms <- function(x = 1) {
kms = x / .62137
return(kms)
}
miles2inches(2)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
miles2inches <- function(x = 1) {
inches = x * 63360
return(inches)
}
miles2feet <- function(x = 1) {
feet = x * 5280
return(feet)
}
miles2yards <- function(x = 1) {
yards = x * 1760
return(yards)
}
miles2meters <- function(x = 1) {
meters = x / .00062137
return(meters)
}
miles2kms <- function(x = 1) {
kms = x / .62137
return(kms)
}
convert <- function(x, to = "km") {
switch(convert,
"in" = miles2inches(x),
"ft" = miles2feet(x),
"yd" = miles2yards(x),
"m" = miles2meters(x),
NA)
}
convert(3, "in")
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
miles2inches <- function(x = 1) {
inches = x * 63360
return(inches)
}
miles2feet <- function(x = 1) {
feet = x * 5280
return(feet)
}
miles2yards <- function(x = 1) {
yards = x * 1760
return(yards)
}
miles2meters <- function(x = 1) {
meters = x / .00062137
return(meters)
}
miles2kms <- function(x = 1) {
kms = x / .62137
return(kms)
}
convert <- function(x, to = "km") {
switch(convert(x,
"in" = miles2inches(x),
"ft" = miles2feet(x),
"yd" = miles2yards(x),
"m" = miles2meters(x),
NA))
}
convert(3, "in")
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
miles2inches <- function(x = 1) {
inches = x * 63360
return(inches)
}
miles2feet <- function(x = 1) {
feet = x * 5280
return(feet)
}
miles2yards <- function(x = 1) {
yards = x * 1760
return(yards)
}
miles2meters <- function(x = 1) {
meters = x / .00062137
return(meters)
}
miles2kms <- function(x = 1) {
kms = x / .62137
return(kms)
}
convert <- function(x, to = "km") {
switch(convert(x,
"in" = miles2inches(x),
"ft" = miles2feet(x),
"yd" = miles2yards(x),
"m" = miles2meters(x),
"km" = miles2kms(x),
NA))
}
convert(3, "in")
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
miles2inches <- function(x = 1) {
inches = x * 63360
return(inches)
}
miles2feet <- function(x = 1) {
feet = x * 5280
return(feet)
}
miles2yards <- function(x = 1) {
yards = x * 1760
return(yards)
}
miles2meters <- function(x = 1) {
meters = x / .00062137
return(meters)
}
miles2kms <- function(x = 1) {
kms = x / .62137
return(kms)
}
convert <- function(x, to = "km") {
switch(convert,
1 = miles2inches(x),
2 = miles2feet(x),
3 = miles2yards(x),
4 = miles2meters(x),
5 = miles2kms(x),
NA)
}
convert(3, "in")
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title
#' @description
#' @pararm
#' @return
miles2kms <- function(miles) {
kms = miles * 1.6
return(kms)
}
miles2kms(c(1:10, seq(20, 100, by = 10)))
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title liters to gallons
#' @description converts liters to gallons
#' @pararm liters (numeric)
#' @return gallons (numeric)
liters2gallons <- function(liters) {
gallons = liters / 3.78541
return(gallons)
}
liters2gallons(c(1:10, seq(20, 100, by = 10)))
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title odd number
#' @description calculates if a number is odd
#' @pararm x (numeric)
#' @return statement if x is odd (logical)
is_odd <- function(x){
if (is_even(x) == TRUE){
print("FALSE")
} else if (is_even(x) == FALSE) {
print("TRUE")
} else {
"NA"
}
}
is_odd(1)
is_odd(4)
# UNRESOLVED
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title odd number
#' @description calculates if a number is odd
#' @pararm x (numeric)
#' @return statement if x is odd (logical)
is_odd <- function(x){
if (x %% 2 == 0){
print("FALSE")
} else if (x %% 2 == 1) {
print("TRUE")
} else {
"NA"
}
}
is_odd(1)
is_odd(4)
# UNRESOLVED
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title miles to kilometers
#' @description convertes miles to kilometers
#' @pararm x (numeric)
#' @return kilometers (numeric)
convert <- function(x, to = "km") {
switch(convert,
1 = miles2inches(x),
2 = miles2feet(x),
3 = miles2yards(x),
4 = miles2meters(x),
5 = miles2kms(x),
NA)
}
convert(3, "in")
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title miles to kilometers
#' @description convertes miles to kilometers
#' @pararm x (numeric)
#' @return kilometers (numeric)
convert <- function(x, to = "km") {
switch(to =,
1 = miles2inches(x),
2 = miles2feet(x),
3 = miles2yards(x),
4 = miles2meters(x),
5 = miles2kms(x),
NA)
}
convert(3, "in")
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title miles to kilometers
#' @description convertes miles to kilometers
#' @pararm x (numeric)
#' @return kilometers (numeric)
convert <- function(x, to = "km") {
switch(convert(x,
1 = miles2inches(x),
2 = miles2feet(x),
3 = miles2yards(x),
4 = miles2meters(x),
5 = miles2kms(x),
NA))
}
convert(3, 1)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title miles to kilometers
#' @description convertes miles to kilometers
#' @pararm x (numeric)
#' @return kilometers (numeric)
convert <- function(x, to = "km") {
convert(x,
switch(to = ,
1 = miles2inches(x),
2 = miles2feet(x),
3 = miles2yards(x),
4 = miles2meters(x),
5 = miles2kms(x),
NA)))
}
convert(3, 2)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title miles to kilometers
#' @description convertes miles to kilometers
#' @pararm x (numeric)
#' @return kilometers (numeric)
convert <- function(x, y = "km") {
switch(y,
"in" = miles2inches(x),
"ft" = miles2feet(x),
"yd" = miles2yards(x),
"m" = miles2meters(x),
"km" = miles2kms(x),
NA
)
}
convert(3, 2)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title miles to kilometers
#' @description convertes miles to kilometers
#' @pararm x (numeric)
#' @return kilometers (numeric)
convert <- function(x, y = "km") {
switch(y,
"in" = miles2inches(x),
"ft" = miles2feet(x),
"yd" = miles2yards(x),
"m" = miles2meters(x),
"km" = miles2kms(x),
NA
)
}
convert(3, "in")
miles2inches(3)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title miles to kilometers
#' @description convertes miles to kilometers
#' @pararm x (numeric)
#' @return kilometers (numeric)
convert <- function(x, y = "km") {
switch(y,
"in" = miles2inches(x),
"ft" = miles2feet(x),
"yd" = miles2yards(x),
"m" = miles2meters(x),
"km" = miles2kms(x),
NA
)
}
convert(3, "in")
convert(3, "ft")
convert(3, "yd")
convert(3, "m")
convert(3, "km")
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title g(x)
#' @description calculates g(x)
#' @pararm x (numeric)
#' @return g(x) (numeric)
g <- function(x) {
g = 2*x + 5
return(g)
}
g(0)
g(-5/2)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title g(x)
#' @description calculates g(x)
#' @pararm x (numeric)
#' @return g(x) (numeric)
g <- function(x) {
g = 2*x + 5
return(g)
}
g(0)
g(-5/2)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title g(x)
#' @description calculates g(x)
#' @pararm x (numeric)
#' @return g(x) (numeric)
g <- function(x) {
g = 2*x + 5
return(g)
}
g(0)
g(-5/2)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title g(x)
#' @description calculates g(x)
#' @pararm x (numeric)
#' @return g(x) (numeric)
g <- function(x) {
g = 2*x + 5
return(g)
}
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title f(x)
#' @description calculates f(x)
#' @pararm x (numeric)
#' @return f(x) (numeric)
f <- function(x) {
f = x^2
return(f)
}
f(2)
f(-5)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title g(x)
#' @description calculates g(x)
#' @pararm x (numeric)
#' @return g(x) (numeric)
g <- function(x) {
g = 2*x + 5
return(g)
}
g(0)
g(-5/2)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title g(x)
#' @description calculates g(x)
#' @pararm x (numeric)
#' @return g(x) (numeric)
g <- function(x) {
g = 2*x + 5
return(g)
}
g(0)
g(-5/2)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
g <- function(x) {
g = 2*x + 5
return(g)
}
g(0)
g(-5/2)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
#' @title f(x)
#' @description calculates f(x)
#' @pararm x (numeric)
#' @return f(x) (numeric)
f <- function(x) {
f = x^2
return(f)
}
f(2)
f(-5)
